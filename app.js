
const express = require('express');
const app = express();
const cors = require('cors');
const Web3 = require('web3');
const web3 = new Web3('http://localhost:8545');




app.use(cors());
app.use('/static', express.static('public'));

var contract = new web3.eth.Contract(
[{"constant":false,"inputs":[{"name":"_numbers","type":"uint256[]"}],"name":"makeBets","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},
{"constant":true,"inputs":[],"name":"getBets","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],
{"constant":true,"inputs":[],"name":"getPools","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],
{"constant":true,"inputs":[],"name":"getPool","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],
{"constant":true,"inputs":[],"name":"buyTokens","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],
{"constant":true,"inputs":[],"name":"getTokens","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],

'0xbc4a28d747825ae4ae771d1f0cf476d3119a0b8d',
   {
     //from: web3.eth.accounts[0],
     from: '0x0125063e982f49d862e8cc5fe6c0864f02afeee0',
     data: '60606040526040805190810160405280601181526020017f48656c6c6f20426c6f636b20576f726c640000000000000000000000000000008152506000908051906020019061004f929190610065565b506000600155341561006057600080fd5b61010a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a657805160ff19168380011785556100d4565b828001600101855582156100d4579182015b828111156100d35782518255916020019190600101906100b8565b5b5090506100e191906100e5565b5090565b61010791905b808211156101035760008160009055506001016100eb565b5090565b90565b610362806101196000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312fb1cbd146100675780639698086b1461008a578063d705a4b5146100e7578063f4b7095b14610175575b600080fd5b341561007257600080fd5b610088600480803590602001909190505061019e565b005b341561009557600080fd5b6100e5600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101b1565b005b34156100f257600080fd5b6100fa6101cb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013a57808201518184015260208101905061011f565b50505050905090810190601f1680156101675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018057600080fd5b610188610273565b6040518082815260200191505060405180910390f35b8060016000828254019250508190555050565b80600090805190602001906101c792919061027d565b5050565b6101d36102fd565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102695780601f1061023e57610100808354040283529160200191610269565b820191906000526020600020905b81548152906001019060200180831161024c57829003601f168201915b5050505050905090565b6000600154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102be57805160ff19168380011785556102ec565b828001600101855582156102ec579182015b828111156102eb5782518255916020019190600101906102d0565b5b5090506102f99190610311565b5090565b602060405190810160405280600081525090565b61033391905b8082111561032f576000816000905550600101610317565b5090565b905600a165627a7a7230582008eeade2be1a54dac22a5e7f9b544f24d27ff8f53d126e995378dc441127856b0029',
     gas: '4700000'
   }
 )

 app.post('/make-bet', (req, res, next) => {
   //res.send('Hello')
   var numbers = req.body.numbers;
   console.log(numbers);
   contract.methods.makeBets(numbers).send('0x0125063e982f49d862e8cc5fe6c0864f02afeee0').then(e => res.send(e))
 })

 app.get('/get-bet', (req, res, next) => {
   //res.send('Hello')
   contract.methods.getBets().call().then(e => res.send(e))
 })

app.get('/buy-tokens', (req,res,next) => {
  contact.methods.buyTokens();
  res.status(200).send()
})

app.get('/latest-results', (req, res, next) => {

 contract.methods.getPools().call.then(e => res.send(e))

})

app.get('/event', (req,res,next) => {

  contract.methods.getPool().call.then(e => res.send(e))

})

app.get('/', (req, res) => {
  //res.send('Hello')
  res.send('index');
  // res.sendFile(__dirname + '/public/index.html')
})

// app.get('/ajax_response', (req, res) => {
//   //res.send("I AM AJAX")
//   web3.eth.getAccounts(function(error, addresses) {
//     if (error == null) res.send(JSON.stringify(addresses))
//   })
//   //res.send(JSON.stringify(test));
// })

 app.listen(3000)

// app.listen(3000)
